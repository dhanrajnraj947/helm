# Default values for firstapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: shaikzakir119/utils
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
secret:
  enabled: false      

service:
  enabled: true      
  type: NodePort
  port: 8081
  targetPort: 8081

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  #resourcesLimit:
  #enabled: true      
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #limitsCpu: 5m
  #limitsMemory: 2048Mi
  #requestsCpu: 2m
  #requestsMemory: 1024Mi

resources:
  limits:
    cpu: 200m      
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

scalerCpu:
  pollingInterval: 1      
  cooldownPeriod: 60  
  minReplicaCount: 1
  maxReplicaCount: 10
  stabilizationWindowSeconds: 5
  value: "100"

scalerMemory:
  pollingInterval: 1
  minReplicaCount: 1
  maxReplicaCount: 10
  cooldownPeriod: 5
  stabilizationWindowSeconds: 5
  value: "100"

scalerKafka:
  pollingInterval: 1      
  cooldownPeriod: 60  
  minReplicaCount: 1
  maxReplicaCount: 10
  stabilizationWindowSeconds: 5
  consumerGroup: verizon-group
  lagThreshold: "10"

scalerNewrelic:
  noDataError: true
  threshold: '700000000'
  nrql: "SELECT count(*) FROM Public_APICall SINCE 30 MINUTES AGO TIMESERIES"

kedaMemory:
  enabled: true

kedaKafka:
 enabled: true

kedaNewrelic:
  enabled: true

kedaCPU:
  enabled: true
